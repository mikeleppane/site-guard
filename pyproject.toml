[project]
name = "site-guard"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "MIT" }
keywords = ["site", "guard", "monitoring"]

authors = [{ name = "Mikko LeppÃ¤nen", email = "mleppan23@gmail.com" }]
dependencies = [
    "aiohttp>=3.12.9",
    "beautifulsoup4>=4.13.4",
    "click>=8.2.1",
    "loguru>=0.7.3",
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
]

[dependency-groups]
dev = [
    "isort>=6.0.1",
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.13",
    "types-requests>=2.32.0.20250602",
]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle errors
    "F",    # Pyflakes
    "B",    # flake8-bugbear
    "W",    # pycodestyle warnings
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
    "C90",  # mccabe
    "UP",   # pyupgrade
    "ERA",  # eradicate
    "ARG",  # flake8-unused-arguments
    "TID",  # flake8-tidy-imports
    "PERF", # Perflint
    "SLF",  # flake8-self
    "PTH",  # flake8-use-pathlib
    "FURB", # refurb
    # Consider adding these:
    "I",   # isort (since you're using isort separately, this might conflict)
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "T20", # flake8-print (catches print statements)
]

lint.ignore = [
    "E501", # line-too-long
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = [
    "E",
    "F",
    "B",
    "W",
    "C4",
    "PIE",
    "RET",
    "SIM",
    "RUF",
    "C90",
    "UP",
    "ERA",
    "ARG",
    "TID",
    "SLF",
    "PTH",
    # Add FURB to fixable since it's in select
    "FURB",
]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
lint.exclude = [".git", ".mypy_cache", ".ruff_cache"]
lint.per-file-ignores = {}

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.mypy]
# basic
pretty = true

# be strict(ish)
disallow_untyped_calls = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_equality = true
no_implicit_optional = true
# Add these for better strictness:
disallow_any_generics = true
disallow_incomplete_defs = true

# warnings
warn_unused_ignores = true
warn_unreachable = true
warn_redundant_casts = true
warn_unused_configs = true
warn_return_any = true

ignore_missing_imports = true


[tool.isort]
profile = "black"

[tool.black]
line-length = 100

[tool.pytest.ini_options]
pythonpath = [".", "src"]
python_files = "test_*.py"
testpaths = ["src/tests"]

[project.scripts]
site-guard = "site_guard.main:main"
